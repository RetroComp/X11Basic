# Makefile for X11-Basic (c) Markus Hoffmann V.@version@
# Version 10.03.2014 modified by Markus Hoffmann

# Insert the defs for your machine

SHELL=/bin/sh

# Directories
prefix=@prefix@
exec_prefix=@exec_prefix@

BINDIR=@bindir@
DATADIR=@datadir@
ICONDIR=$(DATADIR)/icons/hicolor/32x32/apps
DESKTOPDIR=$(DATADIR)/applications
LIBDIR=@libdir@
MANDIR=@mandir@
INCDIR=@prefix@/include/x11basic

LIBNO=@version@

# Register variables (-ffixed-reg) -Wall
REGS= @regs@ -Wall 

# Optimization and debugging options
OPT=@copt@

# Additional header file paths
INC=@X_CFLAGS@ -I.
TINEINC=@X_CFLAGS@ -I/usr/include/tine -I/usr/include/doocs -I.

# X11 library path
XLIBS=@X_LIBS@ @X_EXTRA_LIBS@

DEF= @def@ 

# Compiler
#CC=@CC@ @static@ $(REGS)
CC=@CC@ $(REGS)
CCDEBUG=@CC@ -g $(REGS)
CCSHARED=@CC@ $(REGS) -fPIC -shared -Wl,-Bsymbolic-functions 

# Cross-Compiler fuer Windows-Excecutable

# WINCC=i386-mingw32msvc-gcc
WINCC=i586-mingw32msvc-gcc

# Cross-Compiler fuer ATARI ST TOS
TOSCC=m68k-atari-mint-gcc

# Cross-Compiler fuer ARM-Linux-Excecutable

ARMCC=arm-linux-gcc $(REGS)

# Preprocessor
CPP=@CPP@

CFLAGS= $(INC) $(DEF) $(OPT)

# these are the objects which go into libx11basic

LIBOBJS=xbasic.o file.o io.o parser.o variablen.o svariablen.o \
        array.o parameter.o fft.o mathematics.o \
        runtime.o wort_sep.o ltext.o functions.o sfunctions.o afunctions.o \
	kommandos.o gkommandos.o bitmap.o do_gets.o errortxt.o window.o\
	sysVstuff.o aes.o graphics.o sound.o number.o decode.o \
	virtual-machine.o

# these are objects which are compiled to binary

MAINOBJS= main.o xbbc.o xbvm.o xb2c.o

EXTRAOBJS= bytecode.o ccs.o framebuffer.o raw_mouse.o spat-a-fnt.o 5x7.o consolefont.o \
	   unifont.o unifont57.o terminal.o 8x16.o

# Sources for libx11basic

LIBCSRC=$(LIBOBJS:.o=.c)

FBLIBOBJS= $(LIBOBJS) framebuffer.o raw_mouse.o consolefont.o terminal.o spat-a-fnt.o 8x16.o 5x7.o unifont.o unifont57.o 
LIBCSRCFB=$(FBLIBOBJS:.o=.c) 

WINLIBOBJS= $(LIBOBJS) Windows.extension/fnmatch.o
TOSLIBOBJS= $(LIBOBJS) 
CSRC=    $(LIBOBJS:.o=.c) 5x7-rev.c $(EXTRAOBJS:.o=.c) $(MAINOBJS:.o=.c)

DEPSRC=  $(CSRC) 

# Headerfiles which should be added to the distribution

HSRC=  aes.h afunctions.h android.h array.h bitmap.h bytecode.h \
       consolefont.h decode.h defs.h fft.h file.h framebuffer.h functions.h \
       gkommandos.h graphics.h io.h kommandos.h \
       mathematics.h number.h options.h parameter.h parser.h raw_mouse.h \
       sfunctions.h sound.h svariablen.h sysVstuff.h \
       terminal.h variablen.h virtual-machine.h \
       window.h wort_sep.h x11basic.h xb2csol.h xbasic.h

EXAMPLES= \
        examples2/3D-graphics/*.bas \
        examples2/Android/*.bas \
        examples2/calculation/1*.bas \
        examples2/calculation/b*.bas \
        examples2/calculation/fact*.bas \
        examples2/calculation/gen*.bas \
        examples2/calculation/k*.bas \
        examples2/calculation/r*.bas \
        examples2/calculation/sie*.bas \
        examples2/calculation/sq*.bas \
        examples2/calculation/ts*.bas \
        examples2/calculation/W*.bas \
        examples/c-usage/c-demo.c \
        examples/c-usage/c-demo2.c \
        examples/c-usage/library.bas \
        examples/c-usage/Makefile \
        examples/compiler/bas2x11basic.bas \
        examples/compiler/gui2bas.bas \
        examples/graphics/*.bas \
        examples/tests/*.bas \
        examples2/console/console_clock.bas \
        examples2/console/g*.bas \
        examples2/console/l*.bas \
        examples2/console/m*.bas \
        examples2/console/s*.bas \
        examples2/console/t*.bas \
        examples2/fragments/* \
        examples2/games/*.bas \
        examples2/gui/*.bas \
        examples2/gui/*.gui \
        examples2/misc/zahlen.bas \
        examples2/RELEASE-NOTES \
        examples2/simulation/3*.bas \
        examples2/simulation/bif*.bas \
        examples2/simulation/d*.bas \
        examples2/simulation/k*.bas \
        examples2/simulation/l*.bas \
        examples2/simulation/m*.bas \
        examples2/simulation/rot.bas \
        examples2/utils/d*.bas \
        examples2/utils/h*.bas \
        examples2/utils/mondp*.bas \
        examples2/utils/sonnen*.bas \
        examples2/utils/o*.bas

DIST= README INSTALL COPYING doc/man-pages/*.1 doc/ACKNOWLEGEMENTS \
      AUTHORS doc/HISTORY RELEASE_NOTES doc/X11-Basic-manual.txt \
      doc/editors/*  $(HSRC) $(CSRC) \
      config.h.in config.h.tomtom Makefile.in configure config.guess configure.in \
        x11basic.spec x11basic.desktop 5x7-rev.c \
        bitmaps/* icons/x11basic.png \
        examples/compiler/xbc.bas.in \
        examples/compiler/inline.bas \
        examples/compiler/bas2x11basic.bas \
        examples/compiler/gui2bas.bas \
        examples/compiler/xbc-win.bas \
        examples/c-usage/c-demo.c \
        examples/c-usage/c-demo2.c \
        examples/c-usage/library.bas \
        examples/c-usage/Makefile \
	examples/tests/* \
	examples/graphics/* 

BINDIST=README INSTALL COPYING doc/man-pages/*.1 doc/ACKNOWLEGEMENTS \
      AUTHORS doc/HISTORY RELEASE_NOTES doc/X11-Basic-manual.txt \
      doc/editors/* xbasic xbc bas2x11basic xbbc xbvm xb2c x11basic.h xb2csol.h \
      x11basic.a libx11basic.so \
      examples/compiler/xbc.bas.in \
      examples/compiler/inline.bas \
      examples/compiler/bas2x11basic.bas \
      examples/compiler/gui2bas.bas \
      examples/c-usage/c-demo.c \
      examples/c-usage/c-demo2.c \
      examples/c-usage/library.bas \
      examples/c-usage/Makefile \
      examples/tests/* \
      examples/graphics/* 

WINDIST=Windows-Installer/setup.exe Windows.extension/lib/SDL.dll \
        Windows.extension/lib/README-SDL.txt \
        Windows-Installer/readme.txt Windows-Installer/demo.bas \
	xbasic.exe xbvm.exe xbbc.exe xbc.exe xb2c.exe \
	Windows-Installer/x11basic.ico Windows-Installer/x11bver.txt \
	Windows-Installer/X11-Basic.pdf Windows-Installer/bas.ico

TOSDIST=xbasic.tos xbvm.tos xbbc.tos xbc.tos xb2c.tos


DIST2=$(LIBOBJS:.o=.c) main.c

DIR=X11Basic-@version@
DIR2=X11Basic-src-@version@
DIR3=X11Basic-bin-@version@
DIR33=$(DIR)-bin
TINEDIR=tinexbasic-@version@
TINEDIST=$(DIST) doc/tine-xbasic.html examples2/DESY/*
DOOCSDIR=doocsxbasic-@version@
DOOCSDIST=$(DIST) src/doocs-wrapper.cc doc/doocs-xbasic.html \
                  doc/tine-xbasic.html examples2/DESY/*

LINKFLAGS =
WINLINKFLAGS = -L./Windows.extension/lib 

LIBS =  @libs@ @xtra@
LIBS1 =  @libs@
LIBS2 =   -L. -ldl -lm  -lncurses TomTom.extension/contrib/readline-5.2/libreadline.a 

CONSOLELIBS= @libs@ @xtra@

WINLIBS = -lm  -lgdi32 -lkernel32 -luser32 -lole32 -luuid -lwsock32  -lSDL
TOSLIBS = -lm  -lgem

MYWINLIBS = x11basic.lib Windows.extension/lib/libgfx.lib
MYTOSLIBS = x11basic.toslib

all :    configure Makefile xbasic xb2c xbbc xbvm xbc bas2x11basic 

configure : configure.in
	autoconf
Makefile : Makefile.in
	./configure --prefix=/usr

config.h: config.h.in
	./configure --prefix=/usr
 
#.c.o:
#	$(CC) -c $(CFLAGS) -o $@ $<
.cc.o:
	g++ -c $(INC) -o $@ $<


###################################################
#### Fundamentals for X11-Basic (UNIX/LINUX) ######


# Make the (dynamic) library

libx11basic.so: libx11basic.so.$(LIBNO)
	ln -s -f $< libx11basic.so.1
	ln -s -f libx11basic.so.1 libx11basic.so
libx11basic.so.$(LIBNO) : $(LIBCSRC)
	$(CCSHARED) $(OPT)  -Wl,-soname,$@ -o $@ $(LIBCSRC) $(LIBS) $(XLIBS)
	strip $@

# Make the (static) library

x11basic.a : $(LIBOBJS)
	 ar -ru $@ $(LIBOBJS) 

# Make the (dynamically linked) X11-Basic excecutable

xbasic : libx11basic.so main.o
	$(CC) -L. $(LINKFLAGS) -o $@ main.o $(LIBS) -lx11basic $(XLIBS)
	strip $@

# Make th X11-Basic compiler manager xbc

xbc : xbasic libx11basic.so examples/compiler/xbc.bas
	LD_LIBRARY_PATH=. ./xbasic examples/compiler/xbc.bas --dynamic -o $@ -L .
	strip $@


# Make the bytecode compiler xbbc

xbbc : bytecode.h bytecode.o xbbc.o
	$(CC) -o $@ xbbc.o bytecode.o  -L . $(LIBS) -lx11basic  -L /usr/X11/lib/ -lX11 
	strip $@
xbbc.static : xbbc.o bytecode.o x11basic.a
	$(CC) -o $@ xbbc.o bytecode.o x11basic.a -lm -L /usr/X11/lib/ -lX11 $(LIBS)		
	strip $@
xbbc.debug : xbbc.c bytecode.c $(LIBCSRC) 
	$(CCDEBUG) -o $@ xbbc.c bytecode.c  $(LIBCSRC) -lm -L /usr/X11/lib/ -lX11 $(LIBS)		

# Make the virtual machine for interpreting the bytecode

xbvm : bytecode.h xbvm.c 
	$(CC) -o $@ xbvm.c  -L . $(LIBS)  -lx11basic -L /usr/X11/lib/ -lX11 	
	strip $@
xbvm.static : xbvm.o x11basic.a
	$(CC) -o $@ xbvm.o x11basic.a -lm -L /usr/X11/lib/ $(LIBS) -lX11 	
	strip $@
xbvm.debug : xbvm.c  $(LIBCSRC) 
	$(CCDEBUG) -o $@ xbvm.c $(LIBCSRC) -lm -L /usr/X11/lib/ $(LIBS) -lX11 	

###################################################
#### Fundamentals for X11-Basic (MS WINDOWS) ######

# Make the (dynamic) library for MS WINDOWS

libx11basic.dll : x11basic.lib
	$(WINCC) -shared -o $@ x11basic.lib

# Make the (static) library for MS WINDOWS

x11basic.lib : $(WINLIBOBJS)
	rm -f *.o
	$(WINCC) -DWINDOWS -c $(DIST2) -I./Windows.extension/include
	$(WINCC) -DWINDOWS -c mathematics.c -I./Windows.extension/include
	i586-mingw32msvc-ar -ru $@ $(WINLIBOBJS) 
	rm -f *.o

# Make the exe for MS WINDOWS

xbasic.exe: x11basic.lib main.c
	$(WINCC) -DWINDOWS $(OPT) $(WINLINKFLAGS) main.c -o $@ $(MYWINLIBS) \
	 $(WINLIBS)
	strip $@
xbbc.exe: x11basic.lib bytecode.h bytecode.c xbbc.c 
	$(WINCC) -DWINDOWS $(OPT) $(WINLINKFLAGS) -o $@ xbbc.c bytecode.c \
	$(MYWINLIBS) $(WINLIBS)
	strip $@
xb2c.exe: x11basic.lib xb2c.c 
	$(WINCC) -DWINDOWS $(OPT) $(WINLINKFLAGS) -o $@ xb2c.c  \
	$(MYWINLIBS) $(WINLIBS)
	strip $@

xbvm.exe: x11basic.lib bytecode.h xbvm.c 
	$(WINCC) -DWINDOWS $(OPT) $(WINLINKFLAGS) -o $@ xbvm.c \
	 $(MYWINLIBS) $(WINLIBS)
	strip $@

# Make th X11-Xasic psydocompiler (for MS WINDOWS)

xbc.exe : xbasic examples/compiler/xbc-win.bas xbvm.exe xbbc
	LD_LIBRARY_PATH=. ./xbasic -q examples/compiler/xbc-win.bas -o $@
	chmod 755 $@ 


###################################################
# Make the exe for ATARI ST

xbasic.tos: x11basic.toslib main.c
	$(TOSCC) -DATARI $(OPT) $(WINLINKFLAGS) main.c -o $@ $(MYTOSLIBS) \
	 $(TOSLIBS)
	m68k-atari-mint-strip $@
# Make the (static) library for ATARI ST

x11basic.toslib : $(DIST2) mathematics.c
	rm -f *.o
	$(TOSCC) -DATARI -c $(DIST2) 
	$(TOSCC) -DATARI -c mathematics.c
	m68k-atari-mint-ar -ru $@ $(TOSLIBOBJS) 
	rm -f *.o



# Make a version of X11-Basic which uses the framebuffer (and touchscreen) device
# instead of X11-Graphics. This way, the interpreter (and all basic programs) can run without the X-Server

fb: xbasic.framebuffer
xbasic.framebuffer : main.c $(LIBCSRCFB)
	$(CC) -DFRAMEBUFFER $(OPT) $(LINKFLAGS) -o $@ main.c $(LIBCSRCFB) $(LINKFLAGS)  $(LIBS1) 
	strip $@

# Make a version of X11-basic which is statically linked to libx11basic and 
# therefor can be used without the .so file

xbasic.static : x11basic.a main.o
	$(CC) $(OPT) $(LINKFLAGS) -o $@ main.o x11basic.a $(LIBS) $(XLIBS)
	strip $@
xbasic.debug :	main.c $(LIBCSRC)
	$(CCDEBUG) $(OPT) $(LINKFLAGS) -o $@ main.c $(LIBCSRC) $(LIBS) $(XLIBS)
	

static : xbasic.static	xbbc.static xbvm.static xb2c.static
debug  : xbasic.debug	xbbc.debug xb2c.debug xbvm.debug
strip  : xbasic xbbc xbvm xb2c
	strip xbasic
	strip xbbc
	strip xbvm
	strip xb2c



debugtest : xbasic.debug
	valgrind --leak-check=full --track-origins=yes --partial-loads-ok=yes ./xbasic.debug ../examples2/calculation/diffglei.bas

# Make a version of X11-basic which uses the SDL library for graphics 

xbasic.sdl : main.c $(LIBCSRC)
	$(CC) -DUSE_SDL $(OPT) $(LINKFLAGS) -o $@ main.c $(LIBCSRC) $(LIBS) -lSDL -lSDL_gfx
	strip $@

sdl : xbasic.sdl	

config.h: configure

###############################################################
# Make a version of X11-Basic, which runs on the TomTom devices

x11basic.a.tomtom : $(LIBCSRCFB)
	rm -f config.h
	ln -s config.h.tomtom config.h
	rm -f *.o
	$(ARMCC) -ITomTom.extension/ -DFRAMEBUFFER $(OPT)  -c $(LIBCSRCFB)  
	arm-linux-ar -ru $@ $(FBLIBOBJS)
	rm -f *.o config.h

libx11basic.so.$(LIBNO).tomtom : $(LIBCSRCFB)
	rm -f config.h
	ln -s config.h.tomtom config.h
	$(ARMCC) -ITomTom.extension/ -fPIC -DFRAMEBUFFER $(OPT) -shared -Wl,-soname,libx11basic.so.$(LIBNO) -o $@ $(LIBCSRCFB)
	arm-linux-strip $@
	rm -f config.h

xbasic.tomtom :  main.c x11basic.a.tomtom
	rm -f config.h
	ln -s config.h.tomtom config.h
	$(ARMCC) -DFRAMEBUFFER $(OPT) $(LINKFLAGS) -o $@ main.c x11basic.a.tomtom $(LIBS2)  
	arm-linux-strip $@
	rm -f config.h

xbvm.tomtom : bytecode.h xbvm.c  x11basic.a.tomtom
	rm -f config.h
	ln -s config.h.tomtom config.h
	$(ARMCC) -DFRAMEBUFFER $(OPT) $(LINKFLAGS) -o $@ xbvm.c  x11basic.a.tomtom $(LIBS2)  
	arm-linux-strip $@
	rm -f config.h

xbbc.tomtom : xbbc.c bytecode.h bytecode.c  x11basic.a.tomtom
	rm -f config.h
	ln -s config.h.tomtom config.h
	$(ARMCC) -DFRAMEBUFFER $(OPT) $(LINKFLAGS) -o $@  xbbc.c bytecode.c  x11basic.a.tomtom $(LIBS2) 
	rm -f config.h


# This gives the TomTom Distribution

$(DIR33).zip: README xbasic.tomtom  xbvm.tomtom TomTom.extension/x11basic.bmp TomTom.extension/x11basic-demo TomTom.extension/X11-Basic.cap Makefile ../doc/RELEASE_NOTES
	rm -rf /tmp/$(DIR33)
	mkdir /tmp/$(DIR33)
	mkdir /tmp/$(DIR33)/bin
	mkdir /tmp/$(DIR33)/X11-Basic
	mkdir /tmp/$(DIR33)/X11-Basic/examples
	mkdir /tmp/$(DIR33)/SDKRegistry
	rsync -a README /tmp/$(DIR33)/
	cp ../doc/README /tmp/$(DIR33)/X11-Basic/
	cp ../doc/RELEASE_NOTES /tmp/$(DIR33)/X11-Basic/
	(cd ..; tar cf - $(EXAMPLES))|(cd /tmp/$(DIR33)/X11-Basic; tar xpf -)
	rsync -a xbasic.tomtom /tmp/$(DIR33)/bin/xbasic
	rsync -a xbvm.tomtom /tmp/$(DIR33)/bin/xbvm
#	rsync -a xbbc.tomtom /tmp/$(DIR33)/bin/xbbc
	rsync -a TomTom.extension/x11basic-demo /tmp/$(DIR33)/X11-Basic/xbasic-demo
	rsync -a TomTom.extension/x11basic.bmp /tmp/$(DIR33)/SDKRegistry/
	rsync -a TomTom.extension/X11-Basic.cap /tmp/$(DIR33)/SDKRegistry/
	rsync -a /home/hoffmann/c/TTconsole/src/utility/lib/terminfo /tmp/$(DIR33)/lib/
	rsync -a /home/hoffmann/c/TTconsole/src/utility/lib/libncurses.so.5 /tmp/$(DIR33)/lib/
#	rsync -a /home/hoffmann/c/TTconsole/src/utility/bin/libreadline.so.4 /tmp/$(DIR33)/lib/
	rsync -a /home/hoffmann/c/TTconsole/src/utility/lib/termcap /tmp/$(DIR33)/lib/
	(cd /tmp ; zip -r $(DIR33).zip $(DIR33))
	mv /tmp/$(DIR33).zip .

TomTom: $(DIR33).zip


windows: $(WINDIST) xbasic.exe xbvm.exe xbbc.exe xbc.exe xb2c.exe
	rm -f X11-Basic-@version@.zip
	zip -j -D  -o X11-Basic-@version@-win.zip $(WINDIST)

# Make an ATARI ST version

tos: $(TOSDIST) xbasic.tos xbvm.tos xbbc.tos xbc.tos xb2c.tos
	rm -f X11-Basic-atari-@version@.zip
	zip -j -D  -o X11-Basic-@version@-st.zip $(TOSDIST)


examples: X11-Basic-examples-$(LIBNO).zip X11-Basic-examples-$(LIBNO).tar.gz
X11-Basic-examples-$(LIBNO).zip:
	cd .. ; zip -r  src/X11-Basic-examples-$(LIBNO).zip examples2/
X11-Basic-examples-$(LIBNO).tar.gz:
	cd .. ; tar czf  src/X11-Basic-examples-$(LIBNO).tar.gz examples2/
examples2: myzip
	cd .. ; tar chf  src/X11-Basic-examples-@version@.tar examples2/
	rm -f X11-Basic-examples-@version@.tar.myz
	./myzip -c "X11-Basic example files (c) Markus Hoffmann" \
	                   X11-Basic-examples-@version@.tar 


tineexe: $(WINLIBOBJS) main.o 
	$(WINCC) -DTINE -DWINDOWS -c $(DIST2)
	$(WINCC) -DTINE -DWINDOWS $(OPT) $(WINLINKFLAGS) -o tinexbasic.exe $(WINLIBOBJS) main.o \
		 rpclib.lib $(WINLIBS)
tinexbasic.dyn : $(LIBOBJS) main.o 
	$(CC) -DTINE  $(LINKFLAGS) -o $@ $(AOBJS) $(LIBS)  -ltine $(XLIBS)
	strip $@
tinexbasic : $(LIBOBJS) main.o 
	$(CC) -DTINE $(OPT) $(LINKFLAGS) -o $@ $(AOBJS) $(LIBS)  /usr/lib/libtine.a $(XLIBS)
	strip $@
doocsxbasic.dyn : $(LIBOBJS) main.o  doocs-wrapper.o
	$(CC) -DTINE -DDOOCS  $(LINKFLAGS) -o $@ $(AOBJS) doocs-wrapper.o \
		$(LIBS) $(XLIBS) -ltine -lDOOCSclient -lDOOCSserver 
	strip $@
doocsxbasic : $(LIBOBJS) main.o  doocs-wrapper.o
	g++ -DTINE -DDOOCS $(OPT) $(LINKFLAGS) -o $@ $(AOBJS) \
	$(LIBS) /usr/lib/libtine.a /usr/lib/libDOOCSclient.a \
	/usr/lib/libDOOCSserver.a doocs-wrapper.o $(XLIBS)
	strip $@


csxbasic : $(LIBOBJS) 
	$(CC) -DCONTROL $(OPT) $(LINKFLAGS) -o $@ $(AOBJS) $(LIBS) $(XLIBS)
	strip $@


lib:	libx11basic.so x11basic.a


libtinex11basic.so : $(LIBOBJS)
	$(CC) $(OPT) $(LINKFLAGS) -shared -o $@ $(LIBOBJS)

tinex11basic.a : $(LIBOBJS)
	 ar -ru $@ $(LIBOBJS)  

# Make the ANSI-Basic to X11-Basic translator

bas2x11basic : xbc
	LD_LIBRARY_PATH=. ./xbc examples/compiler/bas2x11basic.bas --dynamic -o $@ -L .
	strip $@
myzip : xbc
	LD_LIBRARY_PATH=. ./xbc ../examples2/utils/myzip.bas --dynamic -o myzip -L .
	LD_LIBRARY_PATH=. ./xbc ../examples2/utils/myunzip.bas --dynamic -o myunzip -L .
	strip myzip
	strip myunzip


# make the X11-Basic to C translator
xb2c :  xb2c.o
	$(CC) -o $@ xb2c.o  -L . $(LIBS) -lx11basic -L /usr/X11/lib/ -lX11
	strip $@
xb2c.static : xb2c.o x11basic.a
	$(CC) -o $@ xb2c.o x11basic.a  -lm -L /usr/X11/lib/ -lX11 $(LIBS)
	strip $@
xb2c.debug : xb2c.c $(LIBCSRC)
	$(CCDEBUG) -o $@ xb2c.c  $(LIBCSRC) -lm -L /usr/X11/lib/ -lX11 $(LIBS)

x11basic.tga: x11basic.pov
	povray +I$< +O$@ +FT +W160 +H200 +V -D +X
 
install : xbasic icons/x11basic.png x11basic.desktop libx11basic.so x11basic.h xb2csol.h x11basic.a xbvm xbbc xbc xb2c bas2x11basic
	install -m 644 icons/x11basic.png $(ICONDIR)/
	install -m 644 x11basic.desktop $(DESKTOPDIR)/
	install -s -m 755 xbasic $(BINDIR)/
	install -m 644 libx11basic.so.$(LIBNO) $(LIBDIR)/
	ln -s -f $(LIBDIR)/libx11basic.so.$(LIBNO) $(LIBDIR)/libx11basic.so.1
	ln -s -f $(LIBDIR)/libx11basic.so.1 $(LIBDIR)/libx11basic.so
	install -m 644 x11basic.a $(LIBDIR)/
	install -d $(MANDIR)
	install -d $(MANDIR)/man1
	install -m 644 doc/man-pages/x11basic.1 $(MANDIR)/man1/x11basic.1
	install -m 644 doc/man-pages/x11basic.1 $(MANDIR)/man1/xbasic.1
	install -s -m 755 xbc $(BINDIR)/
	install -s -m 755 xb2c $(BINDIR)/
	install -s -m 755 xbvm $(BINDIR)/
	install -s -m 755 xbbc $(BINDIR)/
	install -s -m 755 bas2x11basic $(BINDIR)/
	install -d $(INCDIR)
	install -m 644 x11basic.h $(INCDIR)/
	install -m 644 xb2csol.h $(INCDIR)/
	install -m 644 doc/man-pages/xbc.1 $(MANDIR)/man1/
	install -m 644 doc/man-pages/xbbc.1 $(MANDIR)/man1/
	install -m 644 doc/man-pages/xbvm.1 $(MANDIR)/man1/
	install -m 644 doc/man-pages/xb2c.1 $(MANDIR)/man1/
	install -m 644 doc/man-pages/bas2x11basic.1 $(MANDIR)/man1/
uninstall :
	rm -f $(ICONDIR)/x11basic.png
	rm -f $(DESKTOPDIR)/x11basic.desktop
	rm -f $(LIBDIR)/libx11basic.so*
	rm -f $(LIBDIR)/x11basic.a
	rm -f $(BINDIR)/xbasic 
	rm -f $(BINDIR)/xbc 
	rm -f $(BINDIR)/xbvm 
	rm -f $(BINDIR)/xbbc
	rm -f $(BINDIR)/xb2c
	rm -f $(BINDIR)/bas2x11basic 
	rm -f $(MANDIR)/man1/xbasic.1
	rm -f $(MANDIR)/man1/x11basic.1 $(MANDIR)/man1/xbc.1 $(MANDIR)/man1/xbbc.1 $(MANDIR)/man1/xbvm.1
	rm -f $(MANDIR)/man1/bas2x11basic.1
	rm -f $(MANDIR)/man1/xb2c.1
	rm -f $(INCDIR)/x11basic.h
	rm -f $(INCDIR)/xb2csol.h
	rmdir $(INCDIR)
clean :
	rm -f *.o a.out b.out b.b Makefile.bak xbasic.debug xbbc.debug xb2c.debug \
	xbvm.debug backup-*.tgz *.d
moreclean : clean
	rm -f  xbasic xbbc xbvm xbc xb2c bas2x11basic libx11basic.so.1.* x11basic.a 11.c \
	       xbasic.sdl xbasic.framebuffer xbasic.static xbvm.static xb2c.static xbbc.static

distclean : moreclean
	rm -f Makefile config.cache config.status config.log config.h \
	X11-Basic-examples-@version@.zip  \
	X11-Basic-examples-$(LIBNO).zip \
	tinexbasic doocsxbasic xbasic.exe xbbc.exe xbc.exe xbvm.exe xb2c.exe \
	myzip myunzip bas2x11basic  x11basic.lib \
	xbvm.tomtom xbbc.tomtom xbasic.tomtom 
	rm -rf autom4te.cache

$(DIR).tar.gz : dist
dist :	$(DIST2)
	rm -rf /tmp/$(DIR)
	mkdir /tmp/$(DIR)
	(tar cf - $(DIST))|(cd /tmp/$(DIR); tar xpf -)
	(cd /tmp; tar cf - $(DIR)|gzip -9 > $(DIR).tar.gz)
	mv /tmp/$(DIR).tar.gz .
bindist : $(DIR3).zip

tinedist : $(DIST2)
	rm -rf /tmp/$(TINEDIR)
	mkdir /tmp/$(TINEDIR)
	(cd ..; tar cf - $(TINEDIST))|(cd /tmp/$(TINEDIR); tar xpf -)
	(cd /tmp; tar cf - $(TINEDIR)|gzip -9 > $(TINEDIR).tar.gz)
doocsdist : $(DIST2)
	rm -rf /tmp/$(DOOCSDIR)
	mkdir /tmp/$(DOOCSDIR)
	(cd ..; tar cf - $(DOOCSDIST))|(cd /tmp/$(DOOCSDIR); tar xpf -)
	(cd /tmp; tar cf - $(DOOCSDIR)|gzip -9 > $(DOOCSDIR).tar.gz)
rpm :	$(DIR).tar.gz x11basic.spec
	cp $(DIR).tar.gz $(HOME)/rpmbuild/SOURCES/
#	rpm --buildroot /usr/src/packages/SOURCES/ -ba --clean x11basic.spec
	rpmbuild -ba  --clean --nodeps x11basic.spec
deb :	$(BINDIST)
	sudo checkinstall -D --pkgname x11basic --pkgversion @version@ \
	--pkgrelease 97 --arch i386 \
	--maintainer kollo@users.sourceforge.net \
        --requires libasound2,libreadline6,liblapack3 --backup  \
	--pkggroup interpreters --provides libx11basic  \
	--pkglicense GPL --strip=yes --stripso=yes --reset-uids 
	rm -f backup-*.tgz
deb2 :	$(DIR).tar.gz
	rm -rf /tmp/$(DIR)
	mkdir /tmp/$(DIR)
	cp $(DIR).tar.gz /tmp/$(DIR)/
	(cd /tmp/$(DIR); \
	tar xzf $(DIR).tar.gz;\
	mv $(DIR) x11basic-$(LIBNO) )
	(cd /tmp/$(DIR)/x11basic-$(LIBNO); \
	dh_make -s -c gpl2 -e kollo@users.sourceforge.net -f ../$(DIR).tar.gz)
	cp debcontrol.spec /tmp/$(DIR)/x11basic-$(LIBNO)/debian/control
	(cd /tmp/$(DIR)/x11basic-$(LIBNO); \
	dpkg-depcheck -d ./configure;\
	rm -f examples/compiler/xbc.bas)
	(cd /tmp/$(DIR)/x11basic-$(LIBNO); \
	sudo dpkg-buildpackage -rfakeroot)

tinerpm : $(TINEDIR).tar.gz tinexbasic.spec
	cp $(TINEDIR).tar.gz /usr/src/packages/SOURCES/
	rpmbuild -ba --clean tinexbasic.spec
doocsrpm : $(DOOCSDIR).tar.gz doocsxbasic.spec
	cp $(DOOCSDIR).tar.gz /usr/src/packages/SOURCES/
	rpmbuild -ba --clean doocsxbasic.spec
$(DIR3).zip : $(BINDIST)
	rm -rf /tmp/$(DIR3)
	mkdir /tmp/$(DIR3)
	mkdir /tmp/$(DIR3)/bin
	mkdir /tmp/$(DIR3)/man
	rsync -a README /tmp/$(DIR3)/
	rsync -a INSTALL /tmp/$(DIR3)/
	rsync -a RELEASE_NOTES /tmp/$(DIR3)/
	rsync -a xbasic /tmp/$(DIR3)/bin/
	rsync -a xbc /tmp/$(DIR3)/bin/
	rsync -a doc/man-pages/x11basic.1 /tmp/$(DIR3)/man/xbasic.1
	rsync -a doc/man-pages/x11basic.1 /tmp/$(DIR3)/man/
	(cd /tmp ; zip -r $(DIR3).zip $(DIR3))
	mv /tmp/$(DIR3).zip .	

# create DSL package (for Damn Small Linux MyDSL)	
dslpackage : xbasic.staticreadline
	(cd /dev/shm; mkdir -p home/dsl/.xtdesktop)
	convert Windows-Installer/x11basic.ico /dev/shm/home/dsl/.xtdesktop/x11basic.png
	echo "table Icon" > /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  Type: Program" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  Caption: X11Basic" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  Command: aterm -e /opt/X11Basic-@version@/xbasic" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  Icon: .xtdesktop/x11basic.png" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  X: 405" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  Y: 25" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "end" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	(cd /dev/shm; mkdir -p opt/X11Basic-@version@)
	cp xbasic.staticreadline /dev/shm/opt/X11Basic-@version@/xbasic
	(cd /dev/shm; tar czf X11Basic.tar.gz home/dsl/.xtdesktop/x11basic* opt/X11Basic-@version@)
	mv /dev/shm/X11Basic.tar.gz .
	(md5sum X11Basic.tar.gz > X11Basic.tar.gz.md5.txt )
check :	xbasic
	LD_LIBRARY_PATH=. ./xbasic -e version
# Auto dependency stuff (from info make)
%.d: %.c
	$(CC) -MM -MT $(@:.d=.o) -MT $@ $(CPPFLAGS) $< -o $@
ifneq ($(MAKECMDGOALS),clean)
ifneq ($(MAKECMDGOALS),distclean)
-include $(DEPSRC:.c=.d)
endif
endif
