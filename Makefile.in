# Makefile for X11-Basic (c) Markus Hoffmann V.@version@
# Version 08.08.2007 modified by Markus Hoffmann

# Insert the defs for your machine

SHELL=/bin/sh

# Directories
prefix=@prefix@
exec_prefix=@exec_prefix@

BINDIR=@bindir@
DATADIR=@datadir@
LIBDIR=@libdir@
MANDIR=@mandir@

LIBNO=@version@

# Register variables (-ffixed-reg)
REGS= @regs@

# Optimization and debugging options
OPT=@copt@

# Additional header file paths
INC=@X_CFLAGS@ -I/usr/include/tine -I/usr/include/doocs -I.

# X11 library path
XLIBS=@X_LIBS@ @X_EXTRA_LIBS@
SFLAGS=

DEF= @def@ 

# Compiler
#CC=@CC@ @static@ $(REGS)
CC=@CC@ $(REGS)

# Cross-Compiler fuer Windows-Excecutable

# WINCC=i386-mingw32msvc-gcc
WINCC=i586-mingw32msvc-gcc

# Cross-Compiler fuer ARM-Linux-Excecutable

ARMCC=arm-linux-gcc

# Preprocessor
CPP=@CPP@

CFLAGS= $(INC) $(DEF) $(OPT) $(SFLAGS)


OBJS=   xbasic.o file.o ccs.o io.o parser.o variablen.o array.o\
        runtime.o wort_sep.o ltext.o functions.o sfunctions.o afunctions.o \
	kommandos.o gkommandos.o bitmap.o do_gets.o errortxt.o window.o\
	sysVstuff.o aes.o graphics.o

# Object group for framebuffer variant

OBJS1=  xbasic.o file.o ccs.o io.o parser.o variablen.o array.o\
        runtime.o wort_sep.o ltext.o functions.o sfunctions.o afunctions.o \
	kommandos.o do_gets.o errortxt.o \
	sysVstuff.o aes.o

DISTOBJS=$(OBJS) main.o mathemat_dummy.o
LIBOBJS= $(OBJS) mathematics.o
EXTRAOBJS= virtual-machine.o bytecode.o xbbc.o xbvm.o xb2c.o framebuffer.o spat-a-fnt.o 5x7.o
WINLIBOBJS= $(OBJS) mathematics.o Windows.extension/fnmatch.o Windows.extension/memfrob.o
AOBJS=   main.o $(LIBOBJS)
BOBJS=   main.o blowfish.o $(LIBOBJS)
CSRC=    $(DISTOBJS:.o=.c) fdata.c $(EXTRAOBJS:.o=.c)
DISTCSRC=$(DISTOBJS:.o=.c)
DEPSRC=  $(CSRC) 

# Headerfiles which should be added to the distribution

HSRC=  aes.h array.h bitmap.h defs.h file.h functions.h gkommandos.h globals.h kommandos.h \
       options.h protos.h xbasic.h window.h vtypes.h ptypes.h bytecode.h \
       framebuffer.h parser.h io.h afunctions.h sfunctions.h graphics.h


DIST= README INSTALL COPYING doc/man-pages/*.1 ACKNOWLEGEMENTS \
      AUTHORS doc/HISTORY RELEASE_NOTES doc/X11-Basic-manual.txt \
      doc/editors/*  $(HSRC) $(CSRC) \
      config.h.in Makefile.in configure config.guess configure.in \
        x11basic.spec \
        bitmaps/* \
        examples/compiler/xbc.bas.in \
        examples/compiler/inline.bas \
        examples/compiler/bas2x11basic.bas \
        examples/compiler/gui2bas.bas \
        examples/compiler/xbc-win.bas \
        examples/compiler/c-demo.c \
	examples/tests/* \
	examples/graphics/* 

BINDIST=README INSTALL COPYING doc/man-pages/*.1 ACKNOWLEGEMENTS \
      AUTHORS doc/HISTORY RELEASE_NOTES doc/X11-Basic-manual.txt \
      doc/editors/* xbasic xbc bas2x11basic xbvm \
      examples/compiler/xbc.bas.in \
      examples/compiler/inline.bas \
      examples/compiler/bas2x11basic.bas \
      examples/compiler/gui2bas.bas \
      examples/compiler/c-demo.c \
      examples/tests/* \
      examples/graphics/* 

WINDIST=Windows-Installer/setup.exe Windows.extension/lib/SDL.dll \
        Windows.extension/lib/README-SDL.txt \
        Windows-Installer/readme.txt Windows-Installer/demo.bas \
	xbasic.exe xbvm.exe xbbc.exe xbc.exe \
	Windows-Installer/x11basic.ico Windows-Installer/x11bver.txt \
	Windows-Installer/X11-Basic.pdf Windows-Installer/bas.ico


DIST2=$(DISTOBJS:.o=.c)

DIR=X11Basic-@version@
DIR2=X11Basic-src-@version@
DIR3=X11Basic-bin-@version@
TINEDIR=tinexbasic-@version@
TINEDIST=$(DIST) doc/tine-xbasic.html examples2/DESY/*
DOOCSDIR=doocsxbasic-@version@
DOOCSDIST=$(DIST) src/doocs-wrapper.cc doc/doocs-xbasic.html \
                  doc/tine-xbasic.html examples2/DESY/*

LINKFLAGS =
WINLINKFLAGS = -L./Windows.extension/lib 

LIBS =  @libs@ @xtra@
CONSOLELIBS= @libs@ @xtra@

WINLIBS = -lm  -lgdi32 -lkernel32 -luser32 -lole32 -luuid -lwsock32  -lSDL

MYWINLIBS = x11basic.lib Windows.extension/lib/libgfx.lib

all :    configure Makefile xbasic xb2c xbbc xbvm xbc bas2x11basic 

configure : configure.in
	autoconf
Makefile : Makefile.in
	./configure --prefix=/usr
 
#.c.o:
#	$(CC) -c $(CFLAGS) -o $@ $<
.cc.o:
	g++ -c $(INC) -o $@ $<


###################################################
#### Fundamentals for X11-Basic (UNIX/LINUX) ######


# Make the (dynamic) library

libx11basic.so: libx11basic.so.$(LIBNO)
	ln -s -f $< libx11basic.so.1
	ln -s -f libx11basic.so.1 libx11basic.so
libx11basic.so.$(LIBNO) : $(LIBOBJS)
	$(CC) -fPIC -shared -Wl,-soname,$@ -o $@ $(LIBOBJS)
	strip $@

# Make the (static) library

x11basic.a : $(LIBOBJS)
	 ar -ru $@ $(LIBOBJS) 

# Make the (dynamically linked) X11-Basic excecutable

xbasic : libx11basic.so main.o
	$(CC) -L. $(LINKFLAGS) -o $@ main.o $(LIBS) -lx11basic $(XLIBS)
	strip $@

# Make th X11-Xasic psydocompiler

xbc : xbasic libx11basic.so
	LD_LIBRARY_PATH=. ./xbasic examples/compiler/xbc.bas --dynamic -o $@
	strip $@


# Make the bytecode compiler xbbc

xbbc : bytecode.h bytecode.o virtual-machine.o xbbc.c
	gcc -o $@ xbbc.c bytecode.o virtual-machine.o -L . -lx11basic -lm -L /usr/X11/lib/ -lX11 -lreadline -lcurses -lncurses	
	strip $@
xbbcstatic : xbbc.c bytecode.h bytecode.o virtual-machine.o x11basic.a
	gcc -o xbbc xbbc.c bytecode.o virtual-machine.o x11basic.a -lm -L /usr/X11/lib/ -lX11 -lreadline -lcurses -lncurses		

# Make the virtual machine for interpreting the bytecode

xbvm : bytecode.h xbvm.c virtual-machine.o 
	gcc -o $@ xbvm.c virtual-machine.o -L . -lx11basic -lm -L /usr/X11/lib/ -lX11 -lreadline -lcurses -lncurses		
	strip $@
xbvmstatic : bytecode.h xbvm.c virtual-machine.o bytecode.h x11basic.a
	gcc -o xbvm xbvm.c virtual-machine.o  x11basic.a -lm -L /usr/X11/lib/ -lX11 -lreadline -lcurses -lncurses	

###################################################
#### Fundamentals for X11-Basic (MS WINDOWS) ######

# Make the (dynamic) library for MS WINDOWS

libx11basic.dll : x11basic.lib
	$(WINCC) -shared -o $@ x11basic.lib

# Make the (static) library for MS WINDOWS

x11basic.lib : $(DIST2) mathematics.c
	rm -f *.o
	$(WINCC) -DWINDOWS -c $(DIST2) -I./Windows.extension/include
	$(WINCC) -DWINDOWS -c mathematics.c -I./Windows.extension/include
	i586-mingw32msvc-ar -ru $@ $(WINLIBOBJS) 
	rm -f *.o

# Make the exe for MS WINDOWS

xbasic.exe: x11basic.lib main.c
	$(WINCC) -DWINDOWS $(OPT) $(WINLINKFLAGS) main.c -o $@ $(MYWINLIBS) \
	 $(WINLIBS)
	strip $@
xbbc.exe: x11basic.lib bytecode.h bytecode.c xbbc.c virtual-machine.c
	$(WINCC) -DWINDOWS $(OPT) $(WINLINKFLAGS) -o $@ xbbc.c bytecode.c \
	virtual-machine.c  $(MYWINLIBS) $(WINLIBS)
	strip $@

xbvm.exe: x11basic.lib bytecode.h xbvm.c virtual-machine.c
	$(WINCC) -DWINDOWS $(OPT) $(WINLINKFLAGS) -o $@ xbvm.c \
	virtual-machine.c  $(MYWINLIBS) $(WINLIBS)
	strip $@

# Make th X11-Xasic psydocompiler (for MS WINDOWS)

xbc-win.b : xbbc examples/compiler/xbc-win.bas
	LD_LIBRARY_PATH=. ./xbbc examples/compiler/xbc-win.bas -o $@
xbc.exe : xbasic xbc-win.b examples/compiler/xbc-win.bas xbvm.exe
	LD_LIBRARY_PATH=. ./xbasic examples/compiler/xbc-win.bas xbc-win.b -o $@
	chmod 755 $@ 
	strip $@

###################################################


mathematics.c:	mathemat_dummy.c
	test -e mathematics.c || (echo "mathematics.c is not installed. using dummy..." ; ln -s $< $@ )

# Make a version of X11-basic with full math support

xbasic.fft : $(AOBJS) 
	$(CC) $(OPT) $(LINKFLAGS) -o $@ $(AOBJS) $(LIBS) $(XLIBS)
	strip $@
fft :  xbasic.fft

# Make a version of X11-basic with encryption/decryption support
	
xbasic.blow : $(BOBJS) 
	$(CC) $(OPT) $(LINKFLAGS) -o $@ $(BOBJS) $(LIBS) $(XLIBS)
	strip $@
blow : 	xbasic.blow


# Make a version of X11-basic which uses the framebuffer (and touchscreen) device
# instead of X11-graphics

fb: xbasic.framebuffer
xbasic.framebuffer : framebuffer.c gkommandos.c window.c 5x7.o spat-a-fnt.o $(OBJS1) main.o mathematics.o
	$(CC) $(OPT) -DFRAMEBUFFER framebuffer.c gkommandos.c window.c 5x7.o spat-a-fnt.o main.o mathematics.o $(OBJS1) $(LINKFLAGS) -o $@ $(LIBS) 
	strip $@

# Make a version of X11-basic which is statically linked to libx11basic and 
# therefor can be used without the .so file
xbasic.static : x11basic.a main.o
	$(CC) $(OPT) $(LINKFLAGS) -o xbasic main.o x11basic.a $(LIBS) $(XLIBS)
	strip xbasic

static : xbasic.static	

# Make a version of X11-basic which uses the SDL library for graphics 

xbasic.sdl : x11basic.a main.o
	$(CC) $(OPT) $(LINKFLAGS) -o $@ main.o x11basic.a $(LIBS) -lSDL -lSDL_gfx
	strip $@

sdl : xbasic.sdl	


# Make a version of X11-Basic which is statically linked to libx11basic and 
# the readline library therefor can be used without the .so files

xbasic.staticreadline : x11basic.a main.o
	$(CC) $(OPT) $(LINKFLAGS) -o $@ main.o x11basic.a\
		/usr/lib/libreadline.a -ldl -lm -lncurses -lX11  $(XLIBS)
	strip $@


tinexbasic.rs : $(OBJS) $(AOBJS) 
	$(CC) -DTINE $(OPT) $(LINKFLAGS) -o $@ $(AOBJS)  \
		 /usr/lib/libreadline.a /usr/lib/libtine.a -ldl -lm -lncurses -lX11  $(XLIBS)
	strip $@
psydo : psydo.o lib
	$(CC) $(OPT) -L. $(LINKFLAGS) -o a.out psydo.o  \
		$(LIBS) -lx11basic $(XLIBS)
psydostatic : psydo.o x11basic.a
	$(CC) $(OPT) -L. $(LINKFLAGS) -o a.out psydo.o x11basic.a \
		$(LIBS) $(XLIBS)
windows: $(WINDIST) xbasic.exe xbvm.exe xbbc.exe xbc.exe
	rm -f X11-Basic-@version@.zip
	zip -j -D  -o X11-Basic-@version@-win.zip $(WINDIST)

examples: X11-Basic-examples-$(LIBNO).zip X11-Basic-examples-$(LIBNO).tar.gz
X11-Basic-examples-$(LIBNO).zip:
	cd .. ; zip -r  src/X11-Basic-examples-$(LIBNO).zip examples2/
X11-Basic-examples-$(LIBNO).tar.gz:
	cd .. ; tar czf  src/X11-Basic-examples-$(LIBNO).tar.gz examples2/
examples2: myzip
	cd .. ; tar chf  src/X11-Basic-examples-@version@.tar examples2/
	rm -f X11-Basic-examples-@version@.tar.myz
	./myzip -c "X11-Basic example files (c) Markus Hoffmann" \
	                   X11-Basic-examples-@version@.tar 


tineexe: $(OBJS) main.o mathematics.o
	$(WINCC) -DTINE -DWINDOWS -c $(DIST2)
	$(WINCC) -DTINE -DWINDOWS $(OPT) $(WINLINKFLAGS) -o tinexbasic.exe $(DISTOBJS) \
		 Windows.extension/fnmatch.o  Windows.extension/memfrob.o rpclib.lib $(WINLIBS)
tinexbasic.dyn : $(OBJS) main.o mathematics.o
	$(CC) -DTINE  $(LINKFLAGS) -o $@ $(AOBJS) \
		$(LIBS)  -ltine $(XLIBS)
	strip $@
tinexbasic : $(OBJS) main.o mathematics.o
	$(CC) -DTINE $(OPT) $(LINKFLAGS) -o $@ $(AOBJS) \
		$(LIBS)  /usr/lib/libtine.a $(XLIBS)
	strip $@
doocsxbasic.dyn : $(OBJS) main.o mathematics.o doocs-wrapper.o
	$(CC) -DTINE -DDOOCS  $(LINKFLAGS) -o $@ $(AOBJS) doocs-wrapper.o \
		$(LIBS)$(XLIBS) -ltine -lDOOCSclient -lDOOCSserver -lpthread
	strip $@
doocsxbasic : $(OBJS) main.o mathematics.o doocs-wrapper.o
	g++ -DTINE -DDOOCS $(OPT) $(LINKFLAGS) -o $@ $(AOBJS) \
	$(LIBS) /usr/lib/libtine.a /usr/lib/libDOOCSclient.a \
	/usr/lib/libDOOCSserver.a doocs-wrapper.o $(XLIBS) -lpthread
	strip $@


csxbasic : $(OBJS) 
	$(CC) -DCONTROL $(OPT) $(LINKFLAGS) -o $@ $(AOBJS) $(LIBS) $(XLIBS)
	strip $@
lib:	libx11basic.so x11basic.a


libtinex11basic.so : $(LIBOBJS)
	$(CC) $(OPT) $(LINKFLAGS) -shared -o $@ $(LIBOBJS)

tinex11basic.a : $(LIBOBJS)
	 ar -ru $@ $(LIBOBJS)  

# Make the ANSI-Basic to X11-Basic translator

bas2x11basic : xbc
	LD_LIBRARY_PATH=. ./xbc examples/compiler/bas2x11basic.bas --dynamic -o $@
	strip $@
myzip : xbc
	LD_LIBRARY_PATH=. ./xbc ../examples2/utils/myzip.bas --dynamic -o myzip
	LD_LIBRARY_PATH=. ./xbc ../examples2/utils/myunzip.bas --dynamic -o myunzip
	strip myzip
	strip myunzip


# make the X11-Basic to C translator
xb2c :  xb2c.c
	gcc -o $@ xb2c.c  -L . -lx11basic -lm -L /usr/X11/lib/ -lX11 -lreadline	
	strip $@
xb2cstatic : xb2c.c x11basic.a
	gcc -o xb2c xb2c.c  x11basic.a -lm -L /usr/X11/lib/ -lX11 -lreadline	



install : xbasic libx11basic.so x11basic.a xbvm xbbc xbc xb2c bas2x11basic
	install -s -m 755 xbasic $(BINDIR)/
	install -m 755 libx11basic.so.$(LIBNO) $(LIBDIR)/
	ln -s -f $(LIBDIR)/libx11basic.so.$(LIBNO) $(LIBDIR)/libx11basic.so.1
	ln -s -f $(LIBDIR)/libx11basic.so.1 $(LIBDIR)/libx11basic.so
	install -m 644 x11basic.a $(LIBDIR)/
	install -m 644 doc/man-pages/x11basic.1 $(MANDIR)/man1/x11basic.1
	install -m 644 doc/man-pages/x11basic.1 $(MANDIR)/man1/xbasic.1
	install -s -m 755 xbc $(BINDIR)/
	install -s -m 755 xb2c $(BINDIR)/
	install -s -m 755 xbvm $(BINDIR)/
	install -s -m 755 xbbc $(BINDIR)/
	install -s -m 755 bas2x11basic $(BINDIR)/
	install doc/man-pages/xbc.1 $(MANDIR)/man1/
	install doc/man-pages/xbbc.1 $(MANDIR)/man1/
	install doc/man-pages/xbvm.1 $(MANDIR)/man1/
	install doc/man-pages/xb2c.1 $(MANDIR)/man1/
	install doc/man-pages/bas2x11basic.1 $(MANDIR)/man1/
uninstall :
	rm -f $(LIBDIR)/libx11basic.so*
	rm -f $(LIBDIR)/x11basic.a
	rm -f $(BINDIR)/xbasic 
	rm -f $(BINDIR)/xbc 
	rm -f $(BINDIR)/xbvm 
	rm -f $(BINDIR)/xbbc
	rm -f $(BINDIR)/xb2c
	rm -f $(BINDIR)/bas2x11basic 
	rm -f $(MANDIR)/man1/xbasic.1
	rm -f $(MANDIR)/man1/x11basic.1 $(MANDIR)/man1/xbc.1 $(MANDIR)/man1/xbbc.1 $(MANDIR)/man1/xbvm.1
	rm -f $(MANDIR)/man1/bas2x11basic.1
	rm -f $(MANDIR)/man1/xb2c.1
clean :
	rm -f *.o a.out b.b xbc-win.b Makefile.bak \
	backup-*.tgz

distclean : clean
	rm -f Makefile config.cache config.status config.log xbasic xbc xbvm \
	X11-Basic-examples-@version@.zip xbbc xb2c xbasic.static \
	tinexbasic doocsxbasic xbasic.exe xbbc.exe xbc.exe xbvm.exe xbasic.dyn xbasic.staticreadline \
	myzip myunzip bas2x11basic libx11basic.so* x11basic.lib x11basic.a
	rm -rf autom4te.cache

dist :	$(DIST2)
	rm -rf /tmp/$(DIR)
	mkdir /tmp/$(DIR)
	(tar cf - $(DIST))|(cd /tmp/$(DIR); tar xpf -)
	(cd /tmp; tar cf - $(DIR)|gzip -9 > $(DIR).tar.gz)
	mv /tmp/$(DIR).tar.gz .
bindist : $(DIR3).zip

tinedist : $(DIST2)
	rm -rf /tmp/$(TINEDIR)
	mkdir /tmp/$(TINEDIR)
	(cd ..; tar cf - $(TINEDIST))|(cd /tmp/$(TINEDIR); tar xpf -)
	(cd /tmp; tar cf - $(TINEDIR)|gzip -9 > $(TINEDIR).tar.gz)
doocsdist : $(DIST2)
	rm -rf /tmp/$(DOOCSDIR)
	mkdir /tmp/$(DOOCSDIR)
	(cd ..; tar cf - $(DOOCSDIST))|(cd /tmp/$(DOOCSDIR); tar xpf -)
	(cd /tmp; tar cf - $(DOOCSDIR)|gzip -9 > $(DOOCSDIR).tar.gz)
rpm :	$(DIR).tar.gz x11basic.spec
	cp $(DIR).tar.gz /usr/src/packages/SOURCES/
#	rpm -ba --clean x11basic.spec
	rpmbuild -ba --clean x11basic.spec
deb :	$(BINDIST)
	sudo checkinstall -D --pkgname x11basic --pkgversion @version@ --arch i386 \
	--maintainer kollo@users.sourceforge.net --requires libreadline5 --backup \
	--pkggroup Interpreters --provides libx11basic --provides xbasic
	rm -f backup-*.tgz
tinerpm : $(TINEDIR).tar.gz tinexbasic.spec
	cp $(TINEDIR).tar.gz /usr/src/packages/SOURCES/
	rpmbuild -ba --clean tinexbasic.spec
doocsrpm : $(DOOCSDIR).tar.gz doocsxbasic.spec
	cp $(DOOCSDIR).tar.gz /usr/src/packages/SOURCES/
	rpmbuild -ba --clean doocsxbasic.spec
$(DIR3).zip : $(BINDIST)
	rm -rf /tmp/$(DIR3)
	mkdir /tmp/$(DIR3)
	mkdir /tmp/$(DIR3)/bin
	mkdir /tmp/$(DIR3)/man
	rsync -a README /tmp/$(DIR3)/
	rsync -a INSTALL /tmp/$(DIR3)/
	rsync -a RELEASE_NOTES /tmp/$(DIR3)/
	rsync -a xbasic /tmp/$(DIR3)/bin/
	rsync -a xbc /tmp/$(DIR3)/bin/
	rsync -a doc/man-pages/x11basic.1 /tmp/$(DIR3)/man/xbasic.1
	rsync -a doc/man-pages/x11basic.1 /tmp/$(DIR3)/man/
	(cd /tmp ; zip -r $(DIR3).zip $(DIR3))
	mv /tmp/$(DIR3).zip .	

# create DSL package (for Damn Small Linux MyDSL)	
dslpackage : xbasic.staticreadline
	(cd /dev/shm; mkdir -p home/dsl/.xtdesktop)
	convert Windows-Installer/x11basic.ico /dev/shm/home/dsl/.xtdesktop/x11basic.png
	echo "table Icon" > /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  Type: Program" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  Caption: X11Basic" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  Command: aterm -e /opt/X11Basic-@version@/xbasic" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  Icon: .xtdesktop/x11basic.png" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  X: 405" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  Y: 25" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "end" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	(cd /dev/shm; mkdir -p opt/X11Basic-@version@)
	cp xbasic.staticreadline /dev/shm/opt/X11Basic-@version@/xbasic
	(cd /dev/shm; tar czf X11Basic.tar.gz home/dsl/.xtdesktop/x11basic* opt/X11Basic-@version@)
	mv /dev/shm/X11Basic.tar.gz .
	(md5sum X11Basic.tar.gz > X11Basic.tar.gz.md5.txt )
check :	xbasic
	LD_LIBRARY_PATH=. ./xbasic -e version
depend : $(DEPSRC) 
	cp Makefile Makefile.bak
	chmod +w Makefile
	makedepend $(INC) $(DEF) $(DEPSRC) 
#	sed -n '/^# DO NOT DELETE/,$$p' < Makefile > Makefile.tmp
#	sed -n '1,/^# DO NOT DELETE/p' < Makefile > Makefile.new
#	tail +2 Makefile.tmp|\
#	sed 's/^\([A-Za-z0-9_]*\)\.o:/\1.o \1.ln:/g'>>Makefile.new
#	rm -f Makefile.tmp
#	mv Makefile.new Makefile

# DO NOT DELETE THIS LINE -- make depend depends on it.
