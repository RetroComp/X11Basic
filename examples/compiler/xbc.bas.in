' Pseudo-Kompiler fuer X11-Basic (console-Version)
' erzeugt allein lauffaehigen Code auf Wunsch auch statisch mit der
' X11-Basic-Library gelinkt
' (c) Markus Hoffmann Dec. 2002 (letzte Bearbeitung: 10.02.2004)

i=1
compileonly=FALSE
precomponly=FALSE
clr inputfile$,dyn
outputfilename$="b.out"
while len(param$(i))
  if left$(param$(i))="-"
    if param$(i)="--help" or param$(i)="-h"
      @intro
      @using
    else if param$(i)="--version"
      @intro
      quit
    else if param$(i)="--dynamic"
      dyn=true
    else if param$(i)="-b"
      precomponly=true
      compileonly=TRUE
    else if param$(i)="-c"
      compileonly=true
    else if param$(i)="-o"
      inc i
      if len(param$(i))
        outputfilename$=param$(i)
      endif
    endif
  else
    inputfile$=param$(i)
    if not exist(inputfile$)
      print "xbc: "+inputfile$+": file or path not found"
      clr inputfile$
    endif
  endif
  inc i
wend
if len(inputfile$)
  rumpf$=inputfile$
  while len(rumpf$)
    wort_sep rumpf$,"/",1,a$,rumpf$
  wend
  f$=a$
  rumpf$=a$
  wort_sep a$,".",1,rumpf$,typ$
  if typ$="o"
    @link
  else if typ$="bas"
    @compile
    if not compileonly
      @link
    endif
  else 
    print f$+": file not recognized: File format not recognized"
  endif
else
  print "xbc: No input files"
endif
quit
procedure intro
  print "X11-Basic Compiler V.@version@ (c) Markus Hoffmann 2002"
  version
return
procedure using
  print "Usage: xbc [options] file..."
  print "Options:"
  print "  -h, --help               Display this information"
  print "  --dynamic                link with shared library libx11basic.so"
  print "  --static                 link with static library (default)"
  print "  -b                       only precompile"
  print "  -c                       precompile and compile, but do not link"
  print "  -o <file>                Place the output into <file>"
return
procedure compile
  open "O",#2,rumpf$+".c"
  print #2,"/* PSEUDO-Code.C ("+f$+")"
  print #2,"   X11-BAsic-Pseudo-Compiler Version @version@"
  print #2,"   (c) Markus Hoffmann"
  print #2,"*/"
  print #2,"#include <stdio.h>"
  print #2,"#include <stdlib.h>"
  print #2,"#include <string.h>"
  print #2,"void reset_input_mode(),x11basicStartup(),programmlauf();"
  print #2,"const char version[]="+chr$(34)+"@version@"+chr$(34)+";"
  print #2,"const char vdate[]="+chr$(34)+date$+" "+time$+" xxxx @version@"+chr$(34)+";"
  print #2,"int programbufferlen=0;"
  print #2,"extern int param_anzahl;"
  print #2,"extern char **param_argumente;"
  print #2,"char ifilename[]="+chr$(34)+f$+chr$(34)+";"
  print #2,"char *programbuffer=NULL;"
  print #2,"char *program[]={"
  open "I",#1,inputfile$
  while not eof(#1)
    lineinput #1,t$
    t$=xtrim$(t$)
    if len(t$)
      if left$(t$)<>"'"
        wort_sep t$," !",1,t$,b$
        if left$(t$,6)="PRINT "
          t$="? "+right$(t$,len(t$)-6)
        else if left$(t$,6)="GOSUB "
          t$="@"+right$(t$,len(t$)-6)
        else if left$(t$,5)="VOID "
          t$="~"+right$(t$,len(t$)-5)
        endif
        t$=replace$(t$,chr$(34),"##AN"+"F##")
        t$=replace$(t$,"\","##BACKS"+"LASH##")
        t$=replace$(t$,"##A"+"NF##","\042")
        t$=replace$(t$,"##BACK"+"SLASH##","\\")
        print #2,chr$(34)+t$+chr$(34)+","
      endif
    endif
  wend
  close #1
  print #2,"};"
  print #2,"int prglen=sizeof(program)/sizeof(char *);"
  print #2,"main(int anzahl, char *argumente[]){"
  print #2,"x11basicStartup(); set_input_mode(1,0);" 
  print #2,"atexit(reset_input_mode);"
  print #2,"param_anzahl=anzahl;"
  print #2,"param_argumente=argumente;"
  print #2,"init_program(); c_run(""); programmlauf();}"
  close #2
  if not precomponly
    system "@CC@ @copt@ -c "+rumpf$+".c"
    system "rm -f "+rumpf$+".c"
  endif
return

procedure link
  if dyn
    system "@CC@ @regs@ -o "+outputfilename$+" "+rumpf$+".o -L/usr/lib/termcap @X_LIBS@ -lx11basic  @libs@"
  else
    system "@CC@ @regs@ -L/usr/lib/termcap -L/opt/readline/lib -o "+outputfilename$+" "+rumpf$+".o /usr/lib/x11basic.a @X_LIBS@ @libs@"
  endif
return
