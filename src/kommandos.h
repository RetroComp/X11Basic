/* Kommandos */


void bidnm(char *);
void c_arraycopy(char *);
void c_arrayfill(char *);
void c_do(char *);
void c_dpoke(char *);
void c_else(char *);
void c_flush(char *);
void c_help(char *);
void c_lpoke(char *);
void c_local(char *);
void c_nop(char *);
void c_poke(char *);
void c_cls(char *),c_clr(char *);
void c_print(char *),c_clear(char *),c_tron(char *),c_troff(char *);
void c_add(char *),c_quit(char *),c_stop(char *),c_beep(char *);
void c_sub(char *),c_erase(char *),c_void(char *),c_detatch(char *);
void c_mul(char *),c_exit(char *),c_pause(char *);
void c_div(char *),c_dec(char *),c_dim(char *);
void c_loop(char *),c_version(char *),c_chain(char *);
void c_while(char *),c_echo(char *),c_end(char *),c_edit(char *),c_save(char *);
void c_return(char *),c_for(char *),c_inc(char *);
void c_if(char *), c_fft(char *),c_error(char *);
void c_load(char *),c_goto(char *),c_gosub(char *);
void c_merge(char *),c_home(char *),c_input(char *);
void c_new(char *),c_read(char *),c_cont(char *);
void c_wend(char *),c_next(char *),c_until(char *),c_break(char *);
void c_run(char *),c_list(char *),c_plist(char *),c_out(char *);
void c_dump(char *),c_open(char *),c_close(char *),c_lineinput(char *);
void c_closew(char *),c_free(char *),c_shm_free(char *);
void c_dolocal(char *,char *);
void c_onbreak(char *),c_seek(char *),c_relseek(char *);
void c_link(PARAMETER *,int),c_randomize(PARAMETER *,int),c_exec(char *);
void c_onmenu(char *),c_case(char *),c_select(char *),c_endselect(char *);
void c_onerror(char *),c_system(char *),c_let(char *);
void c_on(char *),c_restore(char *);
void c_swap(char *);
void c_bload(char *),c_bsave(char *),c_bmove(char *);
void c_bput(char *),c_bget(char *),c_wort_sep(char *);
void c_addsubmuldiv(char *,int),c_unget(char *);
void c_after(char *),c_every(char *),c_rsrc_load(char *),c_rsrc_free(char *);
