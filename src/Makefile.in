.SUFFIXES: 	.m4 .bmp .S 

SHELL=/bin/sh
# Register variables (-ffixed-reg)
REGS= @regs@

# Optimization and debugging options
OPT=@copt@

# Additional header file paths
INC=@X_CFLAGS@ -I${CCSROOT}/include

# for MONITOR=1 we need a System V compatible curses library - I need to
# write an Autoconf macro to test for that...
#Linux:
#INC=@X_CFLAGS@ -I/usr/include/ncurses

# X11 library path
XLIBS=@X_LIBS@
SFLAGS=
# MONITOR=1:
#Linux:
#XLIBS=@X_LIBS@ -L../../binutils-2.4 -lopcodes -lbfd -liberty -lncurses

#Linux SVGALIB support :
#XLIBS=@X_LIBS@ -lvgagl -lvga 
#SFLAGS=-DUSE_SVGALIB

DEF= @def@ -DINLINE=@inline@

# Compiler
#CC=@CC@ @static@ $(REGS)
CC=@CC@ $(REGS)

# Preprocessor
CPP=@CPP@

CFLAGS= $(INC) $(DEF) $(OPT) $(SFLAGS)

 

OBJS=   xbasic.o file.o ccs.o io.o parser.o variablen.o\
        runtime.o wort_sep.o ltext.o\
	kommandos.o gkommandos.o do_gets.o errortxt.o window.o\
	sysVstuff.o

DISTOBJS=$(OBJS) main.o mathemat_dummy.o



LIBOBJS=$(OBJS) mathematics.o
	
AOBJS=  main.o $(LIBOBJS)


CSRC=$(DISTOBJS:.o=.c)
DISTCSRC=$(DISTOBJS:.o=.c)

DEPSRC=$(CSRC) 

DIST= README INSTALL COPYING install.sh doc/* \
      src/xbasic.c \
      src/file.c \
      src/main.c \
      src/ccs.c \
      src/io.c \
      src/parser.c \
      src/variablen.c \
      src/mathemat_dummy.c \
      src/runtime.c \
      src/wort_sep.c \
      src/ltext.c \
      src/kommandos.c \
      src/kommandos.h \
      src/gkommandos.c \
      src/gkommandos.h \
      src/do_gets.c \
      src/errortxt.c \
      src/window.c \
      src/sysVstuff.c \
      src/defs.h \
      src/globals.h \
      src/xbasic.h src/fdata.c \
      src/window.h src/file.h src/protos.h src/options.h \
	src/Makefile.in src/ptypes.h src/vtypes.h\
	src/configure src/config/*\
	src/config.guess \
        src/configure.in\
        src/bitmaps/* examples/*

DIST2=$(DISTOBJS:.o=.c)


DIR=X11Basic-@version@

LINKFLAGS = -L/usr/lib/termcap

LIBS = -lm -lX11 -lreadline -ldl -ltermcap @xtra@

all :    configure Makefile xbasic

configure : configure.in
	autoconf
Makefile : Makefile.in
	./configure
 
fft : $(AOBJS) 
	$(CC) $(OPT) $(LINKFLAGS) -o xbasic $(AOBJS) \
		$(LIBS) $(XLIBS)
	strip xbasic	
static : x11basic.a main.o
	$(CC) $(OPT) $(LINKFLAGS) -o xbasic.static main.o x11basic.a\
		$(LIBS) $(XLIBS)
psydo : psydo.o lib
	$(CC) $(OPT) -L. $(LINKFLAGS) -o a.out psydo.o  \
		$(LIBS)-lx11basic $(XLIBS)
psydostatic : psydo.o x11basic.a
	$(CC) $(OPT) -L. $(LINKFLAGS) -o a.out psydo.o x11basic.a \
		$(LIBS) $(XLIBS)

xbasic : $(DISTOBJS) 
	$(CC) $(OPT) $(LINKFLAGS) -o xbasic $(DISTOBJS) \
		$(LIBS) $(XLIBS)

csxbasic : $(OBJS) 
	$(CC) -DCONTROL $(OPT) $(LINKFLAGS) -o csxbasic $(AOBJS) \
		$(LIBS) $(XLIBS)
lib : $(LIBOBJS)
	$(CC) $(OPT) $(LINKFLAGS) -shared -o libx11basic.so $(LIBOBJS)
x11basic.a : $(LIBOBJS)
	 ar -ru x11basic.a $(LIBOBJS) 

dyn : lib main.o
	$(CC) $(OPT) -L. $(LINKFLAGS) -o xbasic.dyn main.o \
	$(LIBS) -lx11basic $(XLIBS)
	strip xbasic.dyn

install : xbasic
	cp xbasic ${HOME}/bin/xbasic
install2 : dyn lib 
	cp xbasic.dyn ${HOME}/bin/xbasic
	cp libx11basic.so /usr/local/lib/
	strip ${HOME}/bin/xbasic
installroot : dyn lib 
	cp xbasic.dyn /bin/xbasic
	cp libx11basic.so /usr/local/lib/
	rm -f /usr/lib/libx11basic.so
	ln -s /usr/local/lib/libx11basic.so /usr/lib/libx11basic.so
	strip /bin/xbasic
	strip /usr/local/lib/libx11basic.so
	(cd .. ; cp man-pages/x11basic.1 /usr/man/man1/x11basic.1)
	
clean :
	rm -f xbasic xbasic.dyn xbasic.static *.o *.so a.out *.a

distclean : clean
	rm -f Makefile config.cache config.status

dist :	$(DIST2)
	rm -rf /tmp/$(DIR)
	mkdir /tmp/$(DIR)
	(cd ..; tar cf - $(DIST))|(cd /tmp/$(DIR); tar xpf -)
	(cd /tmp; tar cf - $(DIR)|gzip -9 > $(DIR).tar.gz)

depend : $(DEPSRC) 
	cp Makefile Makefile.bak
	chmod +w Makefile
	makedepend $(INC) $(DEF) $(DEPSRC) 
	sed -n '/^# DO NOT DELETE/,$$p' < Makefile > Makefile.tmp
	sed -n '1,/^# DO NOT DELETE/p' < Makefile > Makefile.new
	tail +2 Makefile.tmp|\
	sed 's/^\([A-Za-z0-9_]*\)\.o:/\1.o \1.ln:/g'>>Makefile.new
	rm -f Makefile.tmp
	mv Makefile.new Makefile

# DO NOT DELETE
