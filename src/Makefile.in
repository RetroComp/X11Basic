# Makefile for X11-Basic (c) Markus Hoffmann V.@version@

SHELL=/bin/sh
# Register variables (-ffixed-reg)
REGS= @regs@

# Optimization and debugging options
OPT=@copt@

# Additional header file paths
INC=@X_CFLAGS@ -I${CCSROOT}/include

# X11 library path
XLIBS=@X_LIBS@
VGA_LIBS= -lvgagl -lvga 
SFLAGS=

#Linux SVGALIB support :
#XLIBS=@X_LIBS@ -lvgagl -lvga 
#SFLAGS=-DUSE_SVGALIB

DEF= @def@ 

# Compiler
#CC=@CC@ @static@ $(REGS)
CC=@CC@ $(REGS)

# Compiler fuer Windows-Excecutable

WINCC=i386-mingw32msvc-gcc

# Preprocessor
CPP=@CPP@

CFLAGS= $(INC) $(DEF) $(OPT) $(SFLAGS)

# Directories
prefix=@prefix@
exec_prefix=@exec_prefix@

BINDIR=@bindir@
DATADIR=@datadir@
LIBDIR=@libdir@
MANDIR=@mandir@

OBJS=   xbasic.o file.o ccs.o io.o parser.o variablen.o\
        runtime.o wort_sep.o ltext.o\
	kommandos.o gkommandos.o do_gets.o errortxt.o window.o\
	sysVstuff.o

DISTOBJS=$(OBJS) main.o mathemat_dummy.o
LIBOBJS= $(OBJS) mathematics.o
AOBJS=   main.o $(LIBOBJS)
CSRC=    $(DISTOBJS:.o=.c)
DISTCSRC=$(DISTOBJS:.o=.c)
DEPSRC=  $(CSRC) 

DIST= README INSTALL COPYING install.sh doc/man-pages/* doc/ACKNOWLEGEMENTS \
      doc/AUTHORS doc/HISTORY doc/RELEASE_NOTES doc/X11-Basic-manual.txt \
      doc/editors/* \
      src/xbasic.c \
      src/file.c \
      src/main.c \
      src/ccs.c \
      src/io.c \
      src/parser.c \
      src/variablen.c \
      src/mathemat_dummy.c \
      src/runtime.c \
      src/wort_sep.c \
      src/ltext.c \
      src/kommandos.c \
      src/kommandos.h \
      src/gkommandos.c \
      src/gkommandos.h \
      src/do_gets.c \
      src/errortxt.c \
      src/window.c \
      src/sysVstuff.c \
      src/defs.h src/config.h.in \
      src/globals.h \
      src/xbasic.h src/fdata.c \
      src/window.h src/file.h src/protos.h src/options.h \
	src/Makefile.in src/ptypes.h src/vtypes.h\
	src/configure \
	src/config.guess \
        src/configure.in\
        src/bitmaps/* \
        examples/compiler/xbc.bas.in \
        examples/compiler/inline.bas \
        examples/compiler/bas2x11basic.bas \
        examples/compiler/gui2bas.bas \
        examples/compiler/c-demo.c \
	examples/tests/* \
	examples/graphics/* 

DIST2=$(DISTOBJS:.o=.c)

DIR=X11Basic-@version@
DIR2=X11Basic-src-@version@

LINKFLAGS =
WINLINKFLAGS =

LIBS =  @libs@ @xtra@ -lX11
WINLIBS = -lm  -lgdi32 -lkernel32 -luser32 -lole32 -luuid
TINEWINLIBS = -lm -lgdi32 -lkernel32 -luser32 -lole32 -luuid -lwsock32
CCSLIBS = ${CCSROOT}/lib/libtine.a

all :    configure Makefile xbasic

configure : configure.in
	autoconf
Makefile : Makefile.in
	./configure
 
#.c.o:
#	$(CC) -c $(CFLAGS) -o $@ $<
fft : $(AOBJS) 
	$(CC) $(OPT) $(LINKFLAGS) -o xbasic.fft $(AOBJS) \
		$(LIBS) $(XLIBS)
	strip xbasic.fft
vga : $(DISTOBJS) 
	$(CC) $(OPT) -DUSE_VGA $(LINKFLAGS) -o xbasic.vga $(DISTOBJS) \
		$(LIBS) $(VGA_LIBS)
	strip xbasic.vga
static : x11basic.a main.o
	$(CC) $(OPT) $(LINKFLAGS) -o xbasic.static main.o x11basic.a\
		$(LIBS) $(XLIBS)
psydo : psydo.o lib
	$(CC) $(OPT) -L. $(LINKFLAGS) -o a.out psydo.o  \
		$(LIBS)-lx11basic $(XLIBS)
psydostatic : psydo.o x11basic.a
	$(CC) $(OPT) -L. $(LINKFLAGS) -o a.out psydo.o x11basic.a \
		$(LIBS) $(XLIBS)
windows: clean
	$(WINCC) -DWINDOWS -c $(DIST2)
	$(WINCC) -DWINDOWS $(OPT) $(WINLINKFLAGS) -o xbasic.exe $(DISTOBJS) \
		$(WINLIBS) Windows.extension/fnmatch.o
	strip xbasic.exe
	rm -f X11-Basic-@version@.zip
	
	zip -j -D -K -o X11-Basic-@version@.zip Windows-Installer/setup.exe xbasic.exe \
	Windows-Installer/readme.txt Windows-Installer/demo.bas \
	Windows-Installer/x11basic.ico Windows-Installer/x11bver.txt \
	Windows-Installer/X11-Basic.pdf Windows-Installer/bas.ico

examples: dist
	cd .. ; zip -r  src/X11-Basic-examples-@version@.zip examples2/


tineexe: $(OBJS) main.o mathematics.o
	$(WINCC) -DTINE -DWINDOWS -c $(DIST2)
	$(WINCC) -DTINE -DWINDOWS $(OPT) $(WINLINKFLAGS) -o tinexbasic.exe $(DISTOBJS) \
		 Windows.extension/fnmatch.o rpclib.lib $(TINEWINLIBS)

xbasic : $(DISTOBJS) 
	$(CC) $(OPT) $(LINKFLAGS) -o xbasic $(DISTOBJS) \
		$(LIBS) $(XLIBS)

csxbasic : $(OBJS) 
	$(CC) -DCONTROL $(OPT) $(LINKFLAGS) -o csxbasic $(AOBJS) \
		$(LIBS) $(XLIBS)

tinexbasic : $(OBJS) main.o mathematics.o
	$(CC) -DTINE $(OPT) $(LINKFLAGS) -o tinexbasic $(AOBJS) \
		$(LIBS) $(CCSLIBS) $(XLIBS)

lib : $(LIBOBJS)
	$(CC) -shared -o libx11basic.so $(LIBOBJS)

tlib : $(LIBOBJS)
	$(CC) $(OPT) $(LINKFLAGS) -shared -o libtinex11basic.so $(LIBOBJS) $(CCSLIBS)

x11basic.a : $(LIBOBJS)
	 ar -ru x11basic.a $(LIBOBJS) 
tx11basic.a : $(LIBOBJS)
	 ar -ru tx11basic.a $(LIBOBJS)  $(CCSLIBS)

dyn : lib main.o
	$(CC) -L. $(LINKFLAGS) -o xbasic.dyn main.o \
	$(LIBS) -lx11basic $(XLIBS)
	strip xbasic.dyn
xbc : dyn 
	xbasic.dyn ../examples/compiler/xbc.bas --dynamic -o xbc
	strip xbc
bas2x11basic : xbc
	xbc ../examples/compiler/bas2x11basic.bas --dynamic -o bas2x11basic
installhome : xbasic
	install -s -m 755 xbasic ${HOME}/bin/xbasic
installdyn : dyn lib
	install -s -m 755 xbasic.dyn ${HOME}/bin/xbasic
	install -m 755 libx11basic.so $(LIBDIR)/
install : dyn lib x11basic.a
	install -s -m 755 xbasic.dyn $(BINDIR)/xbasic
	install -m 755 libx11basic.so $(LIBDIR)/
	install -m 644 x11basic.a $(LIBDIR)/
	install -m 644 ../man-pages/x11basic.1 $(MANDIR)/man1/x11basic.1
	install -m 644 ../man-pages/x11basic.1 $(MANDIR)/man1/xbasic.1
xbcinstall : xbc install
	install -s -m 755 xbc $(BINDIR)/
	install ../man-pages/xbc.1 $(MANDIR)/man1/xbc.1
uninstall :
	rm -f $(LIBDIR)/libx11basic.so
	rm -f $(LIBDIR)/x11basic.a
	rm -f $(BINDIR)/xbasic $(BINDIR)/xbc 
	rm -f $(MANDIR)/man1/xbasic.1
	rm -f $(MANDIR)/man1/x11basic.1 $(MANDIR)/man1/xbc.1
clean :
	rm -f xbasic xbasic.dyn xbasic.static xbc *.o *.so a.out *.a

distclean : clean
	rm -f Makefile config.cache config.status config.log X11-Basic-examples-@version@.zip

dist :	$(DIST2)
	rm -rf /tmp/$(DIR)
	mkdir /tmp/$(DIR)
	(cd ..; tar cf - $(DIST))|(cd /tmp/$(DIR); tar xpf -)
	(cd /tmp; tar cf - $(DIR)|gzip -9 > $(DIR).tar.gz)
rpm :	dist
	cp /tmp/$(DIR).tar.gz /usr/src/packages/SOURCES/
	rpm -ba --clean x11basic.spec
rpm2 :	dist
	cp /tmp/$(DIR).tar.gz /usr/src/packages/SOURCES/
	rpmbuild -ba --clean x11basic.spec
check :	xbasic
	./xbasic -e version
depend : $(DEPSRC) 
	cp Makefile Makefile.bak
	chmod +w Makefile
	makedepend $(INC) $(DEF) $(DEPSRC) 
	sed -n '/^# DO NOT DELETE/,$$p' < Makefile > Makefile.tmp
	sed -n '1,/^# DO NOT DELETE/p' < Makefile > Makefile.new
	tail +2 Makefile.tmp|\
	sed 's/^\([A-Za-z0-9_]*\)\.o:/\1.o \1.ln:/g'>>Makefile.new
	rm -f Makefile.tmp
	mv Makefile.new Makefile

# DO NOT DELETE
