# Dockerfile for X11-Basic based on the one by Bruno https://github.com/shakenfr/x11basic_docker/
# Start with Ubuntu 20.04
# The docker file generates an installable .deb package of X11-Basic as well as the User-Manul as .pdf
#
FROM ubuntu:20.04
VOLUME dockerfilevolume
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

#
# Basic Packages
#


RUN apt-get update \
&& apt-get install -y apt-utils git tcsh nano vim curl wget make gcc build-essential
RUN apt-get install -y  checkinstall imagemagick transfig
RUN apt-get install -y libreadline-dev xorg-dev libasound2-dev fftw-dev libjpeg-dev \ 
&& apt-get install -y libblas-dev libgmp-dev liblapack-dev libusb-dev libbluetooth-dev libfreetype6-dev
#
# Crosscompiler for WINDOWS
#
RUN apt-get install -y gcc-mingw-w64 wine
#
# Latex Installation for the manual
#
RUN apt-get install -y texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-fonts-extra
#
# Crosscompiler for version for ATARI ST TOS
#
RUN apt-get install -y software-properties-common
RUN add-apt-repository ppa:vriviere/ppa
RUN apt install -y cross-mint-essential

#
# prepare ImageMagic (for Ubuntu)
#
RUN cd /etc/ImageMagick-6/;sed -i 's/"none"/"read | write"/g' policy.xml

#
# Get and make X11-Basic
#

RUN git clone https://github.com/kollokollo/X11Basic.git
RUN mkdir -p X11Basic/src/Debian/Outputs
RUN cd X11Basic/src/;./configure --prefix=/usr
RUN cd X11Basic/src/;sed -i 's/..\/examples\/compiler\/ybasic/\/X11Basic\/examples\/compiler\/ybasic/g' Makefile
RUN cd X11Basic/src;make;make install
#
# Some more tex packages
#
RUN apt-get install -y texlive-xetex texlive-pstricks texlive-science texlive-formats-extra
#
# Make the User-Manual
#
RUN mkdir -p X11Basic/doc/manual/Outputs
# corrected upstream
RUN cd X11Basic/doc/manual/tex/;sed -i 's/usepackage{tikz}/usepackage{tikz}\\usepackage{etex}/g' main.tex
RUN cd X11Basic/doc/manual/;make
RUN cp -R X11Basic/doc/manual/Outputs/X11-Basic-manual-*.pdf /
#
# Make the debian package
#
RUN cd X11Basic/src/;sed -i 's/sudo\ checkinstall/checkinstall/g' Makefile; cat Makefile
# for jessie we need to depend on version 6 of libreadline
RUN cd X11Basic/src/;sed -i 's/libreadline7/libreadline6/g' Makefile; cat Makefile
#RUN touch X11Basic/doc/manual/Outputs/X11-Basic-manual-1.27.txt
# Now make the debian package
RUN cd X11Basic/src;make static
RUN cd X11Basic/src;make deb
# This does not work....
#RUN cp -R /X11Basic/src/Debian/Outputs/*.deb /dockerfilevolume/
# copy the results in the root of the container
RUN cp -R /X11Basic/src/Debian/Outputs/*.deb /
#RUN cp -R /X11Basic/* /

#
# Prepare for the WINDOWS version
#
RUN cd X11Basic; wget https://files.jrsoftware.org/is/5/isetup-5.5.8.exe  

# Install vnc, xvfb in order to create a 'fake' display and firefox
#RUN     apt-get install -y x11vnc xvfb
#RUN     mkdir ~/.vnc
# Setup a password
#RUN     x11vnc -storepasswd 1234 ~/.vnc/passwd

#ENV DISPLAY :0


RUN pwd
COPY wineblob.tar.gz .
RUN tar xzfv wineblob.tar.gz
#RUN cd X11Basic; wine isetup-5.5.8.exe


RUN cd X11Basic/src;make windows

# Make the version for ATARI ST TOS
RUN cd X11Basic/src;make clean
RUN cd X11Basic/src;make tos
RUN cp -R /X11Basic/src/*.zip /

# Make MQTT Version (TODO)


#WORKDIR /dockerfilevolume
CMD ["/bin/sh"]
# TODO: It would be nice if we can also create the WINDOWS package inside the docker
#

